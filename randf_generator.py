import randf_styling as sty

from yattag import Doc, indent
from xhtml2pdf import pisa
from datetime import datetime

def generateHtmlHeader() -> str:
    doc, tag, text, line = Doc().ttl()

    doc.asis('<!DOCTYPE html>')
    with tag('html'):
        with tag('head'):
            doc.stag('meta', charset='utf-8')
            with tag('title'):
                text('')
            doc.stag('meta', name='description', content='An HTML file generated by the RANDF compiler.')
            doc.stag('meta', name='author', content='RANDF Compiler')
        with tag('body'):
            pass
    return (indent(doc.getvalue()))

def insertElementIntoHtml(html: str, the_text: str, element: str) -> str:
    upper = html.split('</body>', 1)[0]
    lower = html.split('</body>', 1)[1]
    doc, tag, text, line = Doc().ttl()

    with tag(element):
        text(the_text)
    
    upper += doc.getvalue() + "</body>" + lower
    return indent(upper)

def insertDocTitleIntoHtml(html: str, the_title: str) -> str:
    upper = html.split('</title>', 1)[0]
    lower = html.split('</title>', 1)[1]
    upper += the_title + '</title>' + lower
    return indent(upper)


def convertHtmlToPdf(raw_html: str, style: sty.Styler, out_file: str) -> bool:
    result_file = open(out_file, "w+b")
    status = pisa.CreatePDF(raw_html, dest=result_file, default_css=style.theme, debug=1)
    result_file.close()
    return status
